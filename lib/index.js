// Generated by CoffeeScript 1.3.3
var express, helper, http, processOptions, restarted, startServer, sysPath,
  __hasProp = {}.hasOwnProperty;

http = require('http');

express = require('express');

sysPath = require("path");

helper = require("./helper");

processOptions = function(options) {
  return helper.extend(options, {
    port: 8000,
    reload: true,
    dir: process.cwd(),
    launch: true,
    addons: [],
    ignored: [],
    watched: []
  });
};

restarted = 0;

startServer = function(server, port, callback) {
  try {
    return server.listen(port, callback);
  } catch (e) {
    if (restarted < 10) {
      return startServer(server, port + (++restarted), callback);
    } else {
      throw e;
    }
  }
};

module.exports = function(options) {
  var addon, app, key, server, _ref;
  if (options == null) {
    options = {};
  }
  processOptions(options);
  app = express();
  server = http.createServer(app);
  if (options.reload) {
    (require("./autoreload"))(app, server, options);
  }
  _ref = helper.requireFolder(sysPath.join(__dirname, "./addons"));
  for (key in _ref) {
    if (!__hasProp.call(_ref, key)) continue;
    addon = _ref[key];
    addon(app, server, options);
  }
  app.configure(function() {
    app.use(express.bodyParser());
    app.use(express["static"](options.dir));
    return app.use(express["static"](sysPath.join(__dirname, "..", "vendor")));
  });
  return startServer(server, options.port, function() {
    console.log("server start at localhost:" + options.port + ", puer will launch your browser later");
    return (require("open"))("http://localhost:" + options.port);
  });
};
