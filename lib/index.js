// Generated by CoffeeScript 1.3.3
var addons, argv, fs, fsExist, helper, http, processOptions, startServer, sysPath;

fs = require('fs');

sysPath = require('path');

http = require('http');

helper = require("./helper");

addons = require("./addons");

argv = process.argv.slice(2);

fsExist = fs.existsSync || sysPath.existsSync;

processOptions = function(options) {
  return helper.extend(options, {
    port: 8000,
    reload: true,
    dir: process.cwd(),
    addons: [],
    ignored: [],
    watched: []
  });
};

startServer = function(server, port, callback) {
  try {
    return server.listen(port, callback);
  } catch (e) {
    return server.listen(port + 1, callback);
  }
};

module.exports = function(options) {
  var addon, app, key, server;
  if (options == null) {
    options = {};
  }
  processOptions(options);
  app = require("express")();
  server = http.createServer(app);
  if (options.reload) {
    (require("./autoreload"))(app, server, options);
  }
  for (key in addons) {
    addon = addons[key];
    if (addons.hasOwnProperty(key)) {
      addon(app, server, options);
    }
  }
  app.configure(function() {
    app.use(express.bodyParser());
    return app.use(express["static"](options.dir));
  });
  return startServer(server, options.port, function() {
    console.log("server start at localhost:" + options.port + ", puer will launch your browser later");
    return (require("open"))("http://localhost:" + options.port);
  });
};
