// Generated by CoffeeScript 1.3.3
var argv, autoReload, express, filters, fs, fsExist, helper, http, io, pwd, sysPath, watch;

fs = require('fs');

sysPath = require('path');

express = require('express');

http = require('http');

io = require('socket.io');

watch = require('watch-tree-maintained');

filters = require("./filters");

helper = require("./helper");

pwd = process.cwd();

argv = process.argv.slice(2);

fsExist = fs.existsSync || sysPath.existsSync;

autoReload = function(server, app, path) {
  var matches;
  if (path == null) {
    path = pwd;
  }
  app.get("/reload.js", function(req, res) {
    return helper.send(sysPath.join(__dirname, "../", "vendor", "reload.js"), res, "text/javascript");
  });
  matches = ['js', 'css', 'less', 'html', 'xhtml', 'htm', 'tpl', 'md', 'markdown', "txt"];
  console.log("watching the flies in " + pwd + " and reload||refresh the page");
  io = io.listen(server);
  return io.sockets.on("connection", function(socket) {
    var watcher;
    watcher = (require("watch-tree-maintained")).watchTree(path, {
      "match": "\." + matches.join('$|\\.'),
      "sample-rate": 1
    });
    return watcher.on("fileModified", function(path) {
      var data;
      console.log(path);
      data = {
        "path": path
      };
      if (~path.indexOf(".css")) {
        data.css = path.slice(pwd.length);
      }
      return socket.emit("update", data);
    });
  });
};

module.exports = function(port, hasAutoreload) {
  var app, filter, ipInfo, key, server;
  if (port == null) {
    port = 8008;
  }
  if (hasAutoreload == null) {
    hasAutoreload = true;
  }
  app = express();
  server = http.createServer(app);
  for (key in filters) {
    filter = filters[key];
    if (filters.hasOwnProperty(key)) {
      filter(app, server, pwd);
    }
  }
  app.configure(function() {
    app.use(express.bodyParser());
    return app.use(express["static"](pwd));
  });
  ipInfo = "";
  app.server = server;
  if (hasAutoreload) {
    autoReload(server, app);
  }
  return server.listen(port, function() {
    console.log("server start at localhost:8008");
    console.log("your computer has no-interval ip as follow: " + ipInfo + ". choose one for outer watching");
    return (require("open"))("http://localhost:" + port);
  });
};
