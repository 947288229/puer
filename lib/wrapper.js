// Generated by CoffeeScript 1.3.3
var coffee, compiler, file, fs, logger, sysPath, wrap, wrapDir, wrapFile, wrapJs, _ref;

fs = require('fs');

sysPath = require("path");

_ref = require("./helper"), file = _ref.file, logger = _ref.logger;

coffee = require("coffee-script");

wrapJs = function(source, id) {
  return "define(" + id + ", function(require, exports, module){\n  " + (source.replace(/\n(?!\n)/g, '\n  ')) + "\n});";
};

compiler = {
  coffee: function(source) {
    return coffee.compile(source, {
      bare: true
    });
  },
  js: function(source) {
    return source;
  }
};

wrapFile = function(from, dest) {
  var extname;
  extname = sysPath.extname(from).slice(1);
  return fs.readFile(from, "utf8", function(err, data) {
    var source;
    if (err != null) {
      return logger(err);
    }
    source = compile[extname](data);
    return file.writeFile(dest, data, function(err) {
      if (err != null) {
        return logger.error(err);
      }
    });
  });
};

wrapDir = function(from, dest) {
  return fs.readdir;
};

wrap = function(from, dest) {};

module.exports = {
  coffee: compiler.coffee
};
